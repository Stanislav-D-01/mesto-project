(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hO:()=>M,VO:()=>V});var t={formSelector:".popup__form",inputSelector:".popup__input-field",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_type_disable",inputErrorClass:"input-field_type_error",errorClass:"input-error_active"};function n(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));o.textContent="",o.classList.remove(n),t.classList.remove(r)}function r(e,r,a,c){var u=Array.from(e.querySelectorAll(r)),i=e.querySelector(a);u.forEach((function(r){n(e,r,t.errorClass,t.inputErrorClass)})),o(i),i.classList.add(c)}function o(e){e.disabled=!0}var a=document.querySelectorAll(".popup");function c(e){e.classList.add("popup_opened"),document.addEventListener("keydown",i)}function u(){document.querySelector(".popup_opened").classList.remove("popup_opened"),document.removeEventListener("keydown",i)}function i(e){"Escape"===e.key&&u()}function l(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}function s(e,t,n,r){r.textContent=n?e:t}var d={baseUrl:"https://nomoreparties.co/v1/plus-cohort-19/users/me",cardsUrl:"https://nomoreparties.co/v1/plus-cohort-19/cards",likesUrl:"https://nomoreparties.co/v1/plus-cohort-19/cards/likes",avatarUrl:"https://nomoreparties.co/v1/plus-cohort-19/users/me/avatar",headers:{authorization:"2c7584da-c4c4-46ef-a185-6ffbe2e069d4"}},f=document.querySelector("#newMesto"),p=document.querySelector(".add-mesto-popup"),m=document.querySelector("input[name=name-new-mesto]"),h=document.querySelector("input[name=link-new-mesto]"),v=document.querySelector(".cards"),y=document.querySelector(".popup-views-img"),_=document.querySelector(".popup__img"),S=document.querySelector(".popup__name-img");function b(e,t,n,r,o,a){n.prepend(function(e,t,n,r,o){var a=f.content.cloneNode(!0),u=a.querySelector(".cards__image"),i=a.querySelector(".cards__like"),l=a.querySelector(".cards__num-likes"),s=a.querySelector(".cards__delete");if(u.src=t,u.alt=e,a.querySelector(".cards__title").textContent=e,l.textContent=r.length,r.length>0)for(var p=0;p<r.length;p++)if(r[p]._id==M){i.classList.add("cards__like_active");break}return o==M&&s.classList.add("cards__delete_visible"),i.addEventListener("click",(function(e){i.matches(".cards__like_active")?V("del",n,e,l):V("add",n,e,l)})),a.querySelector(".cards__delete").addEventListener("click",(function(e){(function(e){return fetch("".concat(d.cardsUrl,"/").concat(e),{method:"DELETE",headers:d.headers})})(n).then((function(t){if(!t.ok)return Promise.reject("Ошибка:%{res.status}");e.target.parentElement.remove()})).catch((function(e){console.log(e)}))})),a.querySelector(".cards__image").addEventListener("click",(function(n){_.src=t,_.alt=e,S.textContent=e,c(y)})),a}(e,t,r,o,a))}function q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var g=document.querySelector("form[name=add-new-mesto]"),C=document.querySelector(".profile__add-button"),k=document.querySelector(".profile__edit-button"),E=document.querySelectorAll(".popup__icon-close"),L=document.querySelector('form[name="edit-user"]'),A=p.querySelector(".popup__button-save"),x=document.querySelector(".profile__user-name"),U=document.querySelector(".profile__user-about"),w=document.querySelector(".profile-popup"),j=document.querySelector("input[name=name-user]"),O=document.querySelector("input[name=about-user]"),B=document.querySelector(".avatar-popup"),T=document.querySelector("form[name=edit-avatar]"),P=T.querySelector("input[name=input-link-avatar]"),z=document.querySelector(".profile__avatar"),D=document.querySelector(".profile__button-avatar-edit"),M="",N={},I=L.querySelector(".popup__button-save"),J=B.querySelector(".popup__button-save");function V(e,t,n,r){"del"==e&&function(e){return fetch("".concat(d.likesUrl,"/").concat(e),{method:"DELETE",headers:d.headers}).then((function(e){return l(e)}))}(t).then((function(e){r.textContent=e.likes.length,n.target.classList.remove("cards__like_active")})).catch((function(e){console.log(e)})),"add"==e&&function(e){return fetch("".concat(d.likesUrl,"/").concat(e),{method:"PUT",headers:d.headers}).then((function(e){return l(e)}))}(t).then((function(e){r.textContent=e.likes.length,n.target.classList.add("cards__like_active")})).catch((function(e){console.log(e)}))}!function(e){function t(t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(t)?(n.disabled=!1,n.classList.remove(e.inactiveButtonClass)):(o(n),n.classList.add(e.inactiveButtonClass))}Array.from(document.querySelectorAll(e.formSelector)).forEach((function(r){!function(r){var o=Array.from(r.querySelectorAll(e.inputSelector)),a=r.querySelector(e.submitButtonSelector);t(o,a),o.forEach((function(c){c.addEventListener("input",(function(){!function(t,r){r.validity.patternMismatch?r.setCustomValidity(r.dataset.errorMessage):r.setCustomValidity(""),!1===r.validity.valid?function(e,t,n,r,o){var a=e.querySelector(".".concat(t.id,"-error"));a.textContent=n,a.classList.add(r),t.classList.add(o)}(t,r,r.validationMessage,e.errorClass,e.inputErrorClass):n(t,r,e.errorClass,e.inputErrorClass)}(r,c),t(o,a)}))}))}(r)}))}(t),a.forEach((function(e){e.addEventListener("click",(function(e){e.target.classList.contains("popup")&&u()}))})),Promise.all([fetch(d.baseUrl,{headers:d.headers}).then((function(e){return l(e)})),fetch(d.baseUrl,{headers:d.headers}).then((function(e){return l(e)})),fetch(d.cardsUrl,{headers:d.headers}).then((function(e){return l(e)}))]).then((function(e){var t=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,c,u=[],i=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=a.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=n.return&&(c=n.return(),Object(c)!==c))return}finally{if(l)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,3),n=t[0],r=t[1],o=t[2];x.textContent=n.name,U.textContent=n.about,M=n._id,z.src=r.avatar,N=o;for(var a=0;a<N.length;a++)b(N[N.length-a-1].name,N[N.length-a-1].link,v,N[N.length-a-1]._id,N[N.length-a-1].likes,N[N.length-a-1].owner._id)})).catch((function(e){return console.log(e)})),L.addEventListener("submit",(function(e){e.preventDefault(),s("Сохранение","Сохранить",!0,I),function(e,t){return fetch(d.baseUrl,{method:"PATCH",headers:{authorization:d.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.value,about:t.value})}).then((function(e){return l(e)}))}(j,O).then((function(e){x.textContent=e.name,U.textContent=e.about,u()})).catch((function(e){console.log(e)})).finally((function(){return s("Сохранение...","Сохранить",!1,I)}))})),E.forEach((function(e){e.addEventListener("click",u)})),k.addEventListener("click",(function(){j.value=x.textContent,O.value=U.textContent,c(w),r(w,t.inputSelector,t.submitButtonSelector,t.inactiveButtonClass)})),C.addEventListener("click",(function(){m.value="",h.value="",c(p),r(p,t.inputSelector,t.submitButtonSelector,t.inactiveButtonClass)})),g.addEventListener("submit",(function(e){e.preventDefault(),s("Сохранение...","Создать",!0,A),function(e,t){return fetch(d.cardsUrl,{method:"POST",headers:{authorization:d.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.value,link:t.value})}).then((function(e){return l(e)}))}(m,h).then((function(e){b(e.name,e.link,v,e._id,[],e.owner._id),u()})).catch((function(e){console.log(e)})).finally((function(){return s("Сохранение...","Создать",!1,A)}))})),D.addEventListener("click",(function(){P.value="",c(B),r(B,t.inputSelector,t.submitButtonSelector,t.inactiveButtonClass)})),T.addEventListener("submit",(function(e){e.preventDefault(),s("Сохранение...","Сохранить",!0,J),function(e){return fetch(d.avatarUrl,{method:"PATCH",headers:{authorization:d.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.value})}).then((function(e){return l(e)}))}(P).then((function(e){z.src=e.avatar,u()})).catch((function(e){console.log(e)})).finally((function(){return s("Сохранение...","Сохранить",!1,J)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQ0EsSUFBSUEsRUFBc0IsQ0NBMUJBLEVBQXdCLENBQUNDLEVBQVNDLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWEYsRUFBb0JJLEVBQUVGLEVBQVlDLEtBQVNILEVBQW9CSSxFQUFFSCxFQUFTRSxJQUM1RUUsT0FBT0MsZUFBZUwsRUFBU0UsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRILEVBQXdCLENBQUNTLEVBQUtDLElBQVVMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEksNEJDQTNFLElBQU1JLEVBQWdCLENBQzNCQyxhQUFjLGVBQ2RDLGNBQWUsc0JBQ2ZDLHFCQUFzQixzQkFDdEJDLG9CQUFxQixrQ0FDckJDLGdCQUFpQix5QkFDakJDLFdBQVksc0JBZ0ZkLFNBQVNDLEVBQWFDLEVBQVFDLEVBQVNDLEVBQWtCQyxHQUN2RCxJQUFNQyxFQUFhSixFQUFPSyxjQUFjLElBQUQsT0FBS0osRUFBUUssR0FBRSxXQUN0REYsRUFBV0csWUFBYyxHQUN6QkgsRUFBV0ksVUFBVUMsT0FBT1AsR0FDNUJELEVBQVFPLFVBQVVDLE9BQU9OLEVBQzNCLENBRU8sU0FBU08sRUFDZFYsRUFDQU4sRUFDQUMsRUFDQUMsR0FFQSxJQUFNZSxFQUFZQyxNQUFNQyxLQUFLYixFQUFPYyxpQkFBaUJwQixJQUMvQ3FCLEVBQVdmLEVBQU9LLGNBQWNWLEdBQ3RDZ0IsRUFBVUssU0FBUSxTQUFDZixHQUNqQkYsRUFDRUMsRUFDQUMsRUFDQVQsRUFBY00sV0FDZE4sRUFBY0ssZ0JBRWxCLElBQ0FvQixFQUFvQkYsR0FDcEJBLEVBQVNQLFVBQVVVLElBQUl0QixFQUN6QixDQUVBLFNBQVNxQixFQUFvQkUsR0FDM0JBLEVBQWNDLFVBQVcsQ0FDM0IsQ0NuSEEsSUFBTUMsRUFBWUMsU0FBU1IsaUJBQWlCLFVBRXJDLFNBQVNTLEVBQVVDLEdBQ3hCQSxFQUFNaEIsVUFBVVUsSUFBSSxnQkFDcEJJLFNBQVNHLGlCQUFpQixVQUFXQyxFQUN2QyxDQUVPLFNBQVNDLElBQ0lMLFNBQVNqQixjQUFjLGlCQUUvQkcsVUFBVUMsT0FBTyxnQkFDM0JhLFNBQVNNLG9CQUFvQixVQUFXRixFQUMxQyxDQVlPLFNBQVNBLEVBQWVHLEdBQ2IsV0FBWkEsRUFBSWhELEtBQ044QyxHQUVKLENDNUJPLFNBQVNHLEVBQWNDLEdBQzVCLE9BQUlBLEVBQUlDLEdBQ0NELEVBQUlFLE9BRUpDLFFBQVFDLE9BQU8sVUFBRCxPQUFXSixFQUFJSyxRQUV4QyxDQUVPLFNBQVNDLEVBQWNDLEVBQWFDLEVBQWNDLEVBQWNDLEdBRW5FQSxFQUFPbEMsWUFETGlDLEVBQ21CRixFQUVBQyxDQUV6QixDQ1pBLElBQU1HLEVBQVMsQ0FDYkMsUUFBUyxzREFDVEMsU0FBVSxtREFDVkMsU0FBVSx5REFDVkMsVUFBVyw2REFDWEMsUUFBUyxDQUNQQyxjQUFlLHlDQ0xiQyxFQUFtQjNCLFNBQVNqQixjQUFjLGFBQ25DNkMsRUFBZ0I1QixTQUFTakIsY0FBYyxvQkFDdkM4QyxFQUFpQjdCLFNBQVNqQixjQUNyQyw4QkFFVytDLEVBQWlCOUIsU0FBU2pCLGNBQ3JDLDhCQUVXZ0QsRUFBaUIvQixTQUFTakIsY0FBYyxVQUMvQ2lELEVBQWVoQyxTQUFTakIsY0FBYyxvQkFDdENrRCxFQUFXakMsU0FBU2pCLGNBQWMsZUFDbENtRCxFQUFlbEMsU0FBU2pCLGNBQWMsb0JBa0VyQyxTQUFTb0QsRUFDZEMsRUFDQUMsRUFDQU4sRUFDQU8sRUFDQUMsRUFDQUMsR0FHQVQsRUFBZVUsUUF6RVYsU0FDTEwsRUFDQUMsRUFDQUMsRUFDQUMsRUFDQUMsR0FHQSxJQUFNRSxFQUFvQmYsRUFBaUJnQixRQUFRQyxXQUFVLEdBQ3ZEQyxFQUFZSCxFQUFrQjNELGNBQWMsaUJBQzVDK0QsRUFBYUosRUFBa0IzRCxjQUFjLGdCQUM3Q2dFLEVBQVdMLEVBQWtCM0QsY0FBYyxxQkFDM0NpRSxFQUFlTixFQUFrQjNELGNBQWMsa0JBTXJELEdBTEE4RCxFQUFVSSxJQUFNWixFQUNoQlEsRUFBVUssSUFBTWQsRUFDaEJNLEVBQWtCM0QsY0FBYyxpQkFBaUJFLFlBQWNtRCxFQUMvRFcsRUFBUzlELFlBQWNzRCxFQUFTWSxPQUU1QlosRUFBU1ksT0FBUyxFQUNwQixJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSWIsRUFBU1ksT0FBUUMsSUFDbkMsR0FBSWIsRUFBU2EsR0FBR0MsS0FBT0MsRUFBUSxDQUM3QlIsRUFBVzVELFVBQVVVLElBQUksc0JBQ3pCLEtBQ0YsQ0FzQ0osT0FsQ0k0QyxHQUFjYyxHQUNoQk4sRUFBYTlELFVBQVVVLElBQUkseUJBRzdCa0QsRUFBVzNDLGlCQUFpQixTQUFTLFNBQVVJLEdBQ3pDdUMsRUFBV1MsUUFBUSx1QkFDckJDLEVBQVcsTUFBT2xCLEVBQVEvQixFQUFLd0MsR0FFL0JTLEVBQVcsTUFBT2xCLEVBQVEvQixFQUFLd0MsRUFFbkMsSUFFQUwsRUFDRzNELGNBQWMsa0JBQ2RvQixpQkFBaUIsU0FBUyxTQUFVSSxJRFhsQyxTQUFvQitCLEdBQ3pCLE9BQU9tQixNQUFNLEdBQUQsT0FBSXJDLEVBQU9FLFNBQVEsWUFBSWdCLEdBQVUsQ0FDM0NvQixPQUFRLFNBQ1JqQyxRQUFTTCxFQUFPSyxTQUVwQixFQ09Na0MsQ0FBV3JCLEdBQ1JzQixNQUFLLFNBQUNuRCxHQUNMLElBQUlBLEVBQUlDLEdBRUQsT0FBT0UsUUFBUUMsT0FBTyx3QkFEM0JOLEVBQUlzRCxPQUFPQyxjQUFjM0UsUUFFN0IsSUFDQzRFLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDZCxHQUNKLElBRUZ0QixFQUNHM0QsY0FBYyxpQkFDZG9CLGlCQUFpQixTQUFTLFNBQVVJLEdBQ25DMEIsRUFBU2dCLElBQU1aLEVBQ2ZKLEVBQVNpQixJQUFNZCxFQUNmRixFQUFhakQsWUFBY21ELEVBQzNCbkMsRUFBVStCLEVBQ1osSUFDS1UsQ0FDVCxDQVlJeUIsQ0FBd0IvQixFQUFXQyxFQUFXQyxFQUFRQyxFQUFVQyxHQUVwRSxDLDBHQ3JFTyxJQUFNNEIsRUFBZXBFLFNBQVNqQixjQUFjLDRCQUM3Q3NGLEVBQWlCckUsU0FBU2pCLGNBQWMsd0JBQ3hDdUYsRUFBb0J0RSxTQUFTakIsY0FBYyx5QkFDM0N3RixFQUFldkUsU0FBU1IsaUJBQWlCLHNCQUN6Q2dGLEVBQWV4RSxTQUFTakIsY0FBYywwQkFDdEMwRixFQUFrQjdDLEVBQWM3QyxjQUFjLHVCQUN2QzJGLEVBQWtCMUUsU0FBU2pCLGNBQWMsdUJBQ3pDNEYsRUFBbUIzRSxTQUFTakIsY0FBYyx3QkFDMUM2RixFQUFtQjVFLFNBQVNqQixjQUFjLGtCQUNqRDhGLEVBQVk3RSxTQUFTakIsY0FBYyx5QkFDbkMrRixFQUFhOUUsU0FBU2pCLGNBQWMsMEJBQzdCZ0csRUFBa0IvRSxTQUFTakIsY0FBYyxpQkFDaERpRyxFQUFpQmhGLFNBQVNqQixjQUFjLDBCQUN4Q2tHLEVBQWlCRCxFQUFlakcsY0FDcEMsaUNBRUltRyxFQUFZbEYsU0FBU2pCLGNBQWMsb0JBQ25Db0csRUFBa0JuRixTQUFTakIsY0FBYyxnQ0FDcEN1RSxFQUFTLEdBQ2hCOEIsRUFBZSxDQUFDLEVBQ2RDLEVBQW9CYixFQUFhekYsY0FBYyx1QkFDL0N1RyxFQUFtQlAsRUFBZ0JoRyxjQUFjLHVCQXVIaEQsU0FBU3lFLEVBQVcxQyxFQUFRd0IsRUFBUS9CLEVBQUt3QyxHQUNoQyxPQUFWakMsR0Z4SUMsU0FBb0J3QixHQUN6QixPQUFPbUIsTUFBTSxHQUFELE9BQUlyQyxFQUFPRyxTQUFRLFlBQUllLEdBQVUsQ0FDM0NvQixPQUFRLFNBQ1JqQyxRQUFTTCxFQUFPSyxVQUNmbUMsTUFBSyxTQUFDbkQsR0FDUCxPQUFPRCxFQUFjQyxFQUN2QixHQUNGLENFa0lJOEUsQ0FBV2pELEdBQ1JzQixNQUFLLFNBQUM0QixHQUNMekMsRUFBUzlELFlBQWN1RyxFQUFLQyxNQUFNdEMsT0FDbEM1QyxFQUFJc0QsT0FBTzNFLFVBQVVDLE9BQU8scUJBQzlCLElBQ0M0RSxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2QsSUFFVSxPQUFWbEQsR0Z6SUMsU0FBaUJ3QixHQUN0QixPQUFPbUIsTUFBTSxHQUFELE9BQUlyQyxFQUFPRyxTQUFRLFlBQUllLEdBQVUsQ0FDM0NvQixPQUFRLE1BQ1JqQyxRQUFTTCxFQUFPSyxVQUNmbUMsTUFBSyxTQUFDbkQsR0FDUCxPQUFPRCxFQUFjQyxFQUN2QixHQUNGLENFbUlJaUYsQ0FBUXBELEdBQ0xzQixNQUFLLFNBQUM0QixHQUNMekMsRUFBUzlELFlBQWN1RyxFQUFLQyxNQUFNdEMsT0FDbEM1QyxFQUFJc0QsT0FBTzNFLFVBQVVVLElBQUkscUJBQzNCLElBQ0NtRSxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2QsR0FFTixFTGhMTyxTQUEwQjlGLEdBc0QvQixTQUFTeUgsRUFBYXRHLEVBQVdJLElBSmpDLFNBQTBCSixHQUN4QixPQUFPQSxFQUFVdUcsTUFBSyxTQUFDakgsR0FBTyxPQUFNQSxFQUFRa0gsU0FBU0MsS0FBSyxHQUM1RCxDQUdNQyxDQUFpQjFHLElBSW5CSSxFQUFTSyxVQUFXLEVBQ3BCTCxFQUFTUCxVQUFVQyxPQUFPakIsRUFBY0ksdUJBSnhDcUIsRUFBb0JGLEdBQ3BCQSxFQUFTUCxVQUFVVSxJQUFJMUIsRUFBY0kscUJBS3pDLENBMURtQmdCLE1BQU1DLEtBQ3JCUyxTQUFTUixpQkFBaUJ0QixFQUFjQyxlQUVqQ3VCLFNBQVEsU0FBQ2hCLElBS3BCLFNBQXlCQSxHQUN2QixJQUFNVyxFQUFZQyxNQUFNQyxLQUN0QmIsRUFBT2MsaUJBQWlCdEIsRUFBY0UsZ0JBRWxDcUIsRUFBV2YsRUFBT0ssY0FBY2IsRUFBY0csc0JBQ3BEc0gsRUFBYXRHLEVBQVdJLEdBQ3hCSixFQUFVSyxTQUFRLFNBQVVmLEdBQzFCQSxFQUFRd0IsaUJBQWlCLFNBQVMsWUFPdEMsU0FBb0J6QixFQUFRQyxHQUN0QkEsRUFBUWtILFNBQVNHLGdCQUNuQnJILEVBQVFzSCxrQkFBa0J0SCxFQUFRdUgsUUFBUUMsY0FFMUN4SCxFQUFRc0gsa0JBQWtCLEtBRUcsSUFBM0J0SCxFQUFRa0gsU0FBU0MsTUFpQ3pCLFNBQ0VwSCxFQUNBQyxFQUNBeUgsRUFDQXhILEVBQ0FDLEdBRUEsSUFBTUMsRUFBYUosRUFBT0ssY0FBYyxJQUFELE9BQUtKLEVBQVFLLEdBQUUsV0FDdERGLEVBQVdHLFlBQWNtSCxFQUN6QnRILEVBQVdJLFVBQVVVLElBQUloQixHQUN6QkQsRUFBUU8sVUFBVVUsSUFBSWYsRUFDeEIsQ0EzQ013SCxDQUNFM0gsRUFDQUMsRUFDQUEsRUFBUTJILGtCQUNScEksRUFBY00sV0FDZE4sRUFBY0ssaUJBR2hCRSxFQUNFQyxFQUNBQyxFQUNBVCxFQUFjTSxXQUNkTixFQUFjSyxnQkFHcEIsQ0E1Qk1nSSxDQUFXN0gsRUFBUUMsR0FDbkJnSCxFQUFhdEcsRUFBV0ksRUFDMUIsR0FDRixHQUNGLENBaEJJK0csQ0FBZ0I5SCxFQUNsQixHQXNESixDSzFCQStILENBQWlCdkksR0o5QmY2QixFQUFVTCxTQUFRLFNBQUNnSCxHQUNqQkEsRUFBUXZHLGlCQUFpQixTQUFTLFNBQUNJLEdBQzdCQSxFQUFJc0QsT0FBTzNFLFVBQVV5SCxTQUFTLFVBQ2hDdEcsR0FFSixHQUNGLElJMkJGTyxRQUFRZ0csSUFBSSxDRm5DSG5ELE1BQU1yQyxFQUFPQyxRQUFTLENBQzNCSSxRQUFTTCxFQUFPSyxVQUNmbUMsTUFBSyxTQUFDbkQsR0FDUCxPQUFPRCxFQUFjQyxFQUN2QixJQUlPZ0QsTUFBTXJDLEVBQU9DLFFBQVMsQ0FDM0JJLFFBQVNMLEVBQU9LLFVBQ2ZtQyxNQUFLLFNBQUNuRCxHQUNQLE9BQU9ELEVBQWNDLEVBQ3ZCLElBNkJPZ0QsTUFBTXJDLEVBQU9FLFNBQVUsQ0FDNUJHLFFBQVNMLEVBQU9LLFVBQ2ZtQyxNQUFLLFNBQUNuRCxHQUNQLE9BQU9ELEVBQWNDLEVBQ3ZCLE1FVENtRCxNQUFLLFlBQStCLE0sczZCQUFBLE1BQTdCaUQsRUFBUSxLQUFFQyxFQUFNLEtBQUVDLEVBQUssS0FDN0JyQyxFQUFnQnpGLFlBQWM0SCxFQUFTRyxLQUN2Q3JDLEVBQWlCMUYsWUFBYzRILEVBQVNJLE1BQ3hDM0QsRUFBU3VELEVBQVN4RCxJQUNsQjZCLEVBQVVqQyxJQUFNNkQsRUFBT0EsT0FDdkIxQixFQUFlMkIsRUFDZixJQUFLLElBQUkzRCxFQUFJLEVBQUdBLEVBQUlnQyxFQUFhakMsT0FBUUMsSUFDdkNqQixFQUNFaUQsRUFBYUEsRUFBYWpDLE9BQVNDLEVBQUksR0FBRzRELEtBQzFDNUIsRUFBYUEsRUFBYWpDLE9BQVNDLEVBQUksR0FBRzhELEtBQzFDbkYsRUFDQXFELEVBQWFBLEVBQWFqQyxPQUFTQyxFQUFJLEdBQUdDLElBQzFDK0IsRUFBYUEsRUFBYWpDLE9BQVNDLEVBQUksR0FBR3FDLE1BQzFDTCxFQUFhQSxFQUFhakMsT0FBU0MsRUFBSSxHQUFHK0QsTUFBTTlELElBR3RELElBQ0NVLE9BQU0sU0FBQ0MsR0FBRyxPQUFLQyxRQUFRQyxJQUFJRixFQUFJLElBRWxDUSxFQUFhckUsaUJBQWlCLFVBQVUsU0FBQ0ksR0FDdkNBLEVBQUk2RyxpQkFDSnJHLEVBQWMsYUFBYyxhQUFhLEVBQU1zRSxHRlQxQyxTQUFzQlIsRUFBV0MsR0FDdEMsT0FBT3JCLE1BQU1yQyxFQUFPQyxRQUFTLENBQzNCcUMsT0FBUSxRQUNSakMsUUFBUyxDQUNQQyxjQUFlTixFQUFPSyxRQUFRQyxjQUM5QixlQUFnQixvQkFFbEIyRixLQUFNQyxLQUFLQyxVQUFVLENBQ25CUCxLQUFNbkMsRUFBVTJDLE1BQ2hCUCxNQUFPbkMsRUFBVzBDLFVBRW5CNUQsTUFBSyxTQUFDbkQsR0FDUCxPQUFPRCxFQUFjQyxFQUN2QixHQUNGLENFSkVnSCxDQUFhNUMsRUFBV0MsR0FDckJsQixNQUFLLFNBQUM0QixHQUNMZCxFQUFnQnpGLFlBQWN1RyxFQUFLd0IsS0FDbkNyQyxFQUFpQjFGLFlBQWN1RyxFQUFLeUIsTUFDcEM1RyxHQUNGLElBQ0MwRCxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2QsSUFDQzBELFNBQVEsa0JBQ1AzRyxFQUFjLGdCQUFpQixhQUFhLEVBQU9zRSxFQUFrQixHQUUzRSxJQUVBZCxFQUFhN0UsU0FBUSxTQUFDeUIsR0FDcEJBLEVBQU9oQixpQkFBaUIsUUFBU0UsRUFDbkMsSUFFQWlFLEVBQWtCbkUsaUJBQWlCLFNBQVMsV0FDMUMwRSxFQUFVMkMsTUFBUTlDLEVBQWdCekYsWUFDbEM2RixFQUFXMEMsTUFBUTdDLEVBQWlCMUYsWUFDcENnQixFQUFVMkUsR0FDVnhGLEVBQ0V3RixFQUNBMUcsRUFBY0UsY0FDZEYsRUFBY0cscUJBQ2RILEVBQWNJLG9CQUVsQixJQUVBK0YsRUFBZWxFLGlCQUFpQixTQUFTLFdBQ3ZDMEIsRUFBZTJGLE1BQVEsR0FDdkIxRixFQUFlMEYsTUFBUSxHQUN2QnZILEVBQVUyQixHQUNWeEMsRUFDRXdDLEVBQ0ExRCxFQUFjRSxjQUNkRixFQUFjRyxxQkFDZEgsRUFBY0ksb0JBRWxCLElBRUE4RixFQUFhakUsaUJBQWlCLFVBQVUsU0FBQ0ksR0FDdkNBLEVBQUk2RyxpQkFDSnJHLEVBQWMsZ0JBQWlCLFdBQVcsRUFBTTBELEdGdEMzQyxTQUFxQjVDLEVBQWdCQyxHQUMxQyxPQUFPMkIsTUFBTXJDLEVBQU9FLFNBQVUsQ0FDNUJvQyxPQUFRLE9BQ1JqQyxRQUFTLENBQ1BDLGNBQWVOLEVBQU9LLFFBQVFDLGNBQzlCLGVBQWdCLG9CQUVsQjJGLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJQLEtBQU1uRixFQUFlMkYsTUFDckJOLEtBQU1wRixFQUFlMEYsVUFFdEI1RCxNQUFLLFNBQUNuRCxHQUNQLE9BQU9ELEVBQWNDLEVBQ3ZCLEdBQ0YsQ0V5QkVrSCxDQUFZOUYsRUFBZ0JDLEdBQ3pCOEIsTUFBSyxTQUFDNEIsR0FDTHJELEVBQ0VxRCxFQUFLd0IsS0FDTHhCLEVBQUswQixLQUNMbkYsRUFDQXlELEVBQUtuQyxJQUNMLEdBQ0FtQyxFQUFLMkIsTUFBTTlELEtBRWJoRCxHQUNGLElBQ0MwRCxPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2QsSUFDQzBELFNBQVEsa0JBQ1AzRyxFQUFjLGdCQUFpQixXQUFXLEVBQU8wRCxFQUFnQixHQUV2RSxJQUVBVSxFQUFnQmhGLGlCQUFpQixTQUFTLFdBQ3hDOEUsRUFBZXVDLE1BQVEsR0FDdkJ2SCxFQUFVOEUsR0FDVjNGLEVBQ0UyRixFQUNBN0csRUFBY0UsY0FDZEYsRUFBY0cscUJBQ2RILEVBQWNJLG9CQUVsQixJQUVBMEcsRUFBZTdFLGlCQUFpQixVQUFVLFNBQUNJLEdBQ3pDQSxFQUFJNkcsaUJBQ0pyRyxFQUFjLGdCQUFpQixhQUFhLEVBQU11RSxHRnhEN0MsU0FBc0JMLEdBQzNCLE9BQU94QixNQUFNckMsRUFBT0ksVUFBVyxDQUM3QmtDLE9BQVEsUUFDUmpDLFFBQVMsQ0FDUEMsY0FBZU4sRUFBT0ssUUFBUUMsY0FDOUIsZUFBZ0Isb0JBRWxCMkYsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQlQsT0FBUTdCLEVBQWV1QyxVQUV4QjVELE1BQUssU0FBQ25ELEdBQ1AsT0FBT0QsRUFBY0MsRUFDdkIsR0FDRixDRTRDRW1ILENBQWEzQyxHQUNWckIsTUFBSyxTQUFDNEIsR0FDTE4sRUFBVWpDLElBQU11QyxFQUFLc0IsT0FDckJ6RyxHQUNGLElBQ0MwRCxPQUFNLFNBQUN0RCxHQUNOd0QsUUFBUUMsSUFBSXpELEVBQ2QsSUFDQ2lILFNBQVEsa0JBQ1AzRyxFQUFjLGdCQUFpQixhQUFhLEVBQU91RSxFQUFpQixHQUUxRSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vbWVzdG8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL21lc3RvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy92YWxpZGF0ZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL21vZGFsLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9hcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9jYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJleHBvcnQgY29uc3QgdmFsaWRhdGlvblZhciA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2lucHV0LWZpZWxkXCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b24tc2F2ZVwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbi1zYXZlX3R5cGVfZGlzYWJsZVwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJpbnB1dC1maWVsZF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJpbnB1dC1lcnJvcl9hY3RpdmVcIixcclxufTtcclxuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvblZhcikge1xyXG4gIGZvcm1WYWxpZGF0aW9uKCk7XHJcblxyXG4gIGZ1bmN0aW9uIGZvcm1WYWxpZGF0aW9uKCkge1xyXG4gICAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25WYXIuZm9ybVNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbCkgPT4ge1xyXG4gICAgICBhZGRGb3JtTGlzdGVuZXIoZm9ybUVsKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gYWRkRm9ybUxpc3RlbmVyKGZvcm1FbCkge1xyXG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgZm9ybUVsLnF1ZXJ5U2VsZWN0b3JBbGwodmFsaWRhdGlvblZhci5pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIGNvbnN0IGJ1dHRvbkVsID0gZm9ybUVsLnF1ZXJ5U2VsZWN0b3IodmFsaWRhdGlvblZhci5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0b2dnbGVCdXR0b24oaW5wdXRMaXN0LCBidXR0b25FbCk7XHJcbiAgICBpbnB1dExpc3QuZm9yRWFjaChmdW5jdGlvbiAoaW5wdXRFbCkge1xyXG4gICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgY2hlY2tWYWxpZChmb3JtRWwsIGlucHV0RWwpO1xyXG4gICAgICAgIHRvZ2dsZUJ1dHRvbihpbnB1dExpc3QsIGJ1dHRvbkVsKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNoZWNrVmFsaWQoZm9ybUVsLCBpbnB1dEVsKSB7XHJcbiAgICBpZiAoaW5wdXRFbC52YWxpZGl0eS5wYXR0ZXJuTWlzbWF0Y2gpIHtcclxuICAgICAgaW5wdXRFbC5zZXRDdXN0b21WYWxpZGl0eShpbnB1dEVsLmRhdGFzZXQuZXJyb3JNZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlucHV0RWwuc2V0Q3VzdG9tVmFsaWRpdHkoXCJcIik7XHJcbiAgICB9XHJcbiAgICBpZiAoaW5wdXRFbC52YWxpZGl0eS52YWxpZCA9PT0gZmFsc2UpIHtcclxuICAgICAgc2hvd0lucHV0RXJyKFxyXG4gICAgICAgIGZvcm1FbCxcclxuICAgICAgICBpbnB1dEVsLFxyXG4gICAgICAgIGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2UsXHJcbiAgICAgICAgdmFsaWRhdGlvblZhci5lcnJvckNsYXNzLFxyXG4gICAgICAgIHZhbGlkYXRpb25WYXIuaW5wdXRFcnJvckNsYXNzXHJcbiAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBoaWRlSW5wdXRFcnIoXHJcbiAgICAgICAgZm9ybUVsLFxyXG4gICAgICAgIGlucHV0RWwsXHJcbiAgICAgICAgdmFsaWRhdGlvblZhci5lcnJvckNsYXNzLFxyXG4gICAgICAgIHZhbGlkYXRpb25WYXIuaW5wdXRFcnJvckNsYXNzXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBmaW5kSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xyXG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsKSA9PiAhaW5wdXRFbC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiB0b2dnbGVCdXR0b24oaW5wdXRMaXN0LCBidXR0b25FbCkge1xyXG4gICAgaWYgKGZpbmRJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xyXG4gICAgICBkaXNhYmxlU3VibWl0QnV0dG9uKGJ1dHRvbkVsKTtcclxuICAgICAgYnV0dG9uRWwuY2xhc3NMaXN0LmFkZCh2YWxpZGF0aW9uVmFyLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYnV0dG9uRWwuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgYnV0dG9uRWwuY2xhc3NMaXN0LnJlbW92ZSh2YWxpZGF0aW9uVmFyLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0lucHV0RXJyKFxyXG4gIGZvcm1FbCxcclxuICBpbnB1dEVsLFxyXG4gIEVyck1lc3NhZ2UsXHJcbiAgY2xhc3NFcnJvckFjdGl2ZSxcclxuICBjbGFzc0lucHV0RXJyb3JcclxuKSB7XHJcbiAgY29uc3QgZXJyRWxlbWVudCA9IGZvcm1FbC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gIGVyckVsZW1lbnQudGV4dENvbnRlbnQgPSBFcnJNZXNzYWdlO1xyXG4gIGVyckVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc0Vycm9yQWN0aXZlKTtcclxuICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQoY2xhc3NJbnB1dEVycm9yKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGlkZUlucHV0RXJyKGZvcm1FbCwgaW5wdXRFbCwgY2xhc3NFcnJvckFjdGl2ZSwgY2xhc3NJbnB1dEVycm9yKSB7XHJcbiAgY29uc3QgZXJyRWxlbWVudCA9IGZvcm1FbC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gIGVyckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIGVyckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc0Vycm9yQWN0aXZlKTtcclxuICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NJbnB1dEVycm9yKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0RXJyb3IoXHJcbiAgZm9ybUVsLFxyXG4gIGlucHV0U2VsZWN0b3IsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3IsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzc1xyXG4pIHtcclxuICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKGZvcm1FbC5xdWVyeVNlbGVjdG9yQWxsKGlucHV0U2VsZWN0b3IpKTtcclxuICBjb25zdCBidXR0b25FbCA9IGZvcm1FbC5xdWVyeVNlbGVjdG9yKHN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgaGlkZUlucHV0RXJyKFxyXG4gICAgICBmb3JtRWwsXHJcbiAgICAgIGlucHV0RWwsXHJcbiAgICAgIHZhbGlkYXRpb25WYXIuZXJyb3JDbGFzcyxcclxuICAgICAgdmFsaWRhdGlvblZhci5pbnB1dEVycm9yQ2xhc3NcclxuICAgICk7XHJcbiAgfSk7XHJcbiAgZGlzYWJsZVN1Ym1pdEJ1dHRvbihidXR0b25FbCk7XHJcbiAgYnV0dG9uRWwuY2xhc3NMaXN0LmFkZChpbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZGlzYWJsZVN1Ym1pdEJ1dHRvbihidXR0b25FbGVtZW50KSB7XHJcbiAgYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbn1cclxuIiwiY29uc3QgbGlzdFBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cFwiKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcGVuUG9wdXAocG9wdXApIHtcclxuICBwb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNoZWNrS2V5RXNjYXBlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlUG9wdXAoKSB7XHJcbiAgY29uc3Qgb3BlblBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9vcGVuZWRcIik7XHJcblxyXG4gIG9wZW5Qb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNoZWNrS2V5RXNjYXBlKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFkZExpc3RlbmVyUG9wdXAoKSB7XHJcbiAgbGlzdFBvcHVwLmZvckVhY2goKHBvcHVwRWwpID0+IHtcclxuICAgIHBvcHVwRWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBcIikpIHtcclxuICAgICAgICBjbG9zZVBvcHVwKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tLZXlFc2NhcGUoZXZ0KSB7XHJcbiAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgIGNsb3NlUG9wdXAoKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgaWYgKHJlcy5vaykge1xyXG4gICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJMb2FkaW5nKHRleHRMb2FkaW5nLCB0ZXN0U3RhbmRhcnQsIGJ1dHRvblN0YXR1cywgYnV0dG9uKSB7XHJcbiAgaWYgKGJ1dHRvblN0YXR1cykge1xyXG4gICAgYnV0dG9uLnRleHRDb250ZW50ID0gdGV4dExvYWRpbmc7XHJcbiAgfSBlbHNlIHtcclxuICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IHRlc3RTdGFuZGFydDtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgY2hlY2tSZXNwb25zZSB9IGZyb20gXCIuL3V0aWxzXCI7XHJcblxyXG5jb25zdCBjb25maWcgPSB7XHJcbiAgYmFzZVVybDogXCJodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvcGx1cy1jb2hvcnQtMTkvdXNlcnMvbWVcIixcclxuICBjYXJkc1VybDogXCJodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvcGx1cy1jb2hvcnQtMTkvY2FyZHNcIixcclxuICBsaWtlc1VybDogXCJodHRwczovL25vbW9yZXBhcnRpZXMuY28vdjEvcGx1cy1jb2hvcnQtMTkvY2FyZHMvbGlrZXNcIixcclxuICBhdmF0YXJVcmw6IFwiaHR0cHM6Ly9ub21vcmVwYXJ0aWVzLmNvL3YxL3BsdXMtY29ob3J0LTE5L3VzZXJzL21lL2F2YXRhclwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiMmM3NTg0ZGEtYzRjNC00NmVmLWExODUtNmZmYmUyZTA2OWQ0XCIsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VySW5mbygpIHtcclxuICByZXR1cm4gZmV0Y2goY29uZmlnLmJhc2VVcmwsIHtcclxuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgcmV0dXJuIGNoZWNrUmVzcG9uc2UocmVzKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRBdmF0YXIoKSB7XHJcbiAgcmV0dXJuIGZldGNoKGNvbmZpZy5iYXNlVXJsLCB7XHJcbiAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVycyxcclxuICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgIHJldHVybiBjaGVja1Jlc3BvbnNlKHJlcyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVMaWtlKGNhcmRJZCkge1xyXG4gIHJldHVybiBmZXRjaChgJHtjb25maWcubGlrZXNVcmx9LyR7Y2FyZElkfWAsIHtcclxuICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgcmV0dXJuIGNoZWNrUmVzcG9uc2UocmVzKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFkZExpa2UoY2FyZElkKSB7XHJcbiAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5saWtlc1VybH0vJHtjYXJkSWR9YCwge1xyXG4gICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICByZXR1cm4gY2hlY2tSZXNwb25zZShyZXMpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmNhcmRzVXJsfS8ke2NhcmRJZH1gLCB7XHJcbiAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVycyxcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldENhcmRzKCkge1xyXG4gIHJldHVybiBmZXRjaChjb25maWcuY2FyZHNVcmwsIHtcclxuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgcmV0dXJuIGNoZWNrUmVzcG9uc2UocmVzKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHBhdGNoUHJvZmlsZShuYW1lSW5wdXQsIGFib3V0SW5wdXQpIHtcclxuICByZXR1cm4gZmV0Y2goY29uZmlnLmJhc2VVcmwsIHtcclxuICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICBhdXRob3JpemF0aW9uOiBjb25maWcuaGVhZGVycy5hdXRob3JpemF0aW9uLFxyXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH0sXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIG5hbWU6IG5hbWVJbnB1dC52YWx1ZSxcclxuICAgICAgYWJvdXQ6IGFib3V0SW5wdXQudmFsdWUsXHJcbiAgICB9KSxcclxuICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgIHJldHVybiBjaGVja1Jlc3BvbnNlKHJlcyk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwb3N0TmV3Q2FyZChuYW1lTWVzdG9JbnB1dCwgbGlua01lc3RvSW5wdXQpIHtcclxuICByZXR1cm4gZmV0Y2goY29uZmlnLmNhcmRzVXJsLCB7XHJcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICBhdXRob3JpemF0aW9uOiBjb25maWcuaGVhZGVycy5hdXRob3JpemF0aW9uLFxyXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH0sXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIG5hbWU6IG5hbWVNZXN0b0lucHV0LnZhbHVlLFxyXG4gICAgICBsaW5rOiBsaW5rTWVzdG9JbnB1dC52YWx1ZSxcclxuICAgIH0pLFxyXG4gIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgcmV0dXJuIGNoZWNrUmVzcG9uc2UocmVzKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9hZEF2YXRhcihuZXdBdmF0YXJJbnB1dCkge1xyXG4gIHJldHVybiBmZXRjaChjb25maWcuYXZhdGFyVXJsLCB7XHJcbiAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgYXV0aG9yaXphdGlvbjogY29uZmlnLmhlYWRlcnMuYXV0aG9yaXphdGlvbixcclxuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICB9LFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBhdmF0YXI6IG5ld0F2YXRhcklucHV0LnZhbHVlLFxyXG4gICAgfSksXHJcbiAgfSkudGhlbigocmVzKSA9PiB7XHJcbiAgICByZXR1cm4gY2hlY2tSZXNwb25zZShyZXMpO1xyXG4gIH0pO1xyXG59XHJcbiIsImltcG9ydCB7IG9wZW5Qb3B1cCB9IGZyb20gXCIuL21vZGFsLmpzXCI7XHJcbmltcG9ydCB7IGRlbGV0ZUxpa2UsIGFkZGxpa2UsIGRlbGV0ZUNhcmQgfSBmcm9tIFwiLi9hcGkuanNcIjtcclxuaW1wb3J0IHsgaWRVc2VyLCB0b2dnbGVMaWtlIH0gZnJvbSBcIi4vaW5kZXguanNcIjtcclxuY29uc3QgdGVtcGxhdGVOZXdNZXN0byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3TWVzdG9cIik7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEFkZE1lc3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtbWVzdG8tcG9wdXBcIik7XHJcbmV4cG9ydCBjb25zdCBuYW1lTWVzdG9JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCJpbnB1dFtuYW1lPW5hbWUtbmV3LW1lc3RvXVwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBsaW5rTWVzdG9JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCJpbnB1dFtuYW1lPWxpbmstbmV3LW1lc3RvXVwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBjYXJkc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNcIik7XHJcbmNvbnN0IHBvcHVwVmlld0ltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtdmlld3MtaW1nXCIpO1xyXG5jb25zdCBwb3B1cEltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltZ1wiKTtcclxuY29uc3QgcG9wdXBOYW1lSW1nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fbmFtZS1pbWdcIik7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGFpbmVyTmV3TWVzdG8oXHJcbiAgbmFtZU1lc3RvLFxyXG4gIGxpbmtNZXN0byxcclxuICBjYXJkSWQsXHJcbiAgYXJyTGlrZXMsXHJcbiAgaWRVc2VyQ2FyZFxyXG4pIHtcclxuICAvL9GE0YPQvdC60YbQuNGPINGE0L7RgNC80LjRgNGD0LXRgiDQuNC3IHRlbXBsYXRlINC60LDRgNGC0L7Rh9C60YMg0LzQtdGB0YLQsCDRgSDQtNC+0LHQsNCy0LvQtdC90LjQtdC8INGB0LvRg9GI0LDQtdGC0LXQu9C10Lkg0LrQu9C40LrQvtCyINC90LAg0LjQutC+0L3QutGDINGD0LTQsNC70LXQvdC40Y8sINC60LvQuNC6INC/0L4g0LrQsNGA0YLQuNC90LrQtSDQtNC70Y8g0L/RgNC+0YHQvNC+0YLRgNCwINC4INC60LvQuNC6INC70LDQudC60LBcclxuICBjb25zdCBjb250YWluZXJOZXdNZXN0byA9IHRlbXBsYXRlTmV3TWVzdG8uY29udGVudC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgY29uc3QgY2FyZEltYWdlID0gY29udGFpbmVyTmV3TWVzdG8ucXVlcnlTZWxlY3RvcihcIi5jYXJkc19faW1hZ2VcIik7XHJcbiAgY29uc3QgYnV0dG9uTGlrZSA9IGNvbnRhaW5lck5ld01lc3RvLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpa2VcIik7XHJcbiAgY29uc3QgbnVtTGlrZXMgPSBjb250YWluZXJOZXdNZXN0by5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19udW0tbGlrZXNcIik7XHJcbiAgY29uc3QgYnV0dG9uRGVsZXRlID0gY29udGFpbmVyTmV3TWVzdG8ucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fZGVsZXRlXCIpO1xyXG4gIGNhcmRJbWFnZS5zcmMgPSBsaW5rTWVzdG87XHJcbiAgY2FyZEltYWdlLmFsdCA9IG5hbWVNZXN0bztcclxuICBjb250YWluZXJOZXdNZXN0by5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX190aXRsZVwiKS50ZXh0Q29udGVudCA9IG5hbWVNZXN0bztcclxuICBudW1MaWtlcy50ZXh0Q29udGVudCA9IGFyckxpa2VzLmxlbmd0aDtcclxuICAvL9C/0YDQvtCy0LXRgNC60LAg0L3QsCDQvdCw0LvQuNGH0LjQtSDRgdCy0L7QuNGFINC70LDQudC60L7QslxyXG4gIGlmIChhcnJMaWtlcy5sZW5ndGggPiAwKSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyckxpa2VzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmIChhcnJMaWtlc1tpXS5faWQgPT0gaWRVc2VyKSB7XHJcbiAgICAgICAgYnV0dG9uTGlrZS5jbGFzc0xpc3QuYWRkKFwiY2FyZHNfX2xpa2VfYWN0aXZlXCIpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8v0L/RgNC+0LLQtdGA0LrQsCDQvdCwINC90LDQu9C40YfQuNC1INGB0LLQvtC40YUg0LrQsNGA0YLQvtGH0LXQuiwg0LXRgdC70Lgg0LXRgdGC0YwgLSDQvtGC0L7QsdGA0LDQttCw0LXQvCDQutC90L7Qv9C60YMg0YPQtNCw0LvQuNGC0YxcclxuICBpZiAoaWRVc2VyQ2FyZCA9PSBpZFVzZXIpIHtcclxuICAgIGJ1dHRvbkRlbGV0ZS5jbGFzc0xpc3QuYWRkKFwiY2FyZHNfX2RlbGV0ZV92aXNpYmxlXCIpO1xyXG4gIH1cclxuXHJcbiAgYnV0dG9uTGlrZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgaWYgKGJ1dHRvbkxpa2UubWF0Y2hlcyhcIi5jYXJkc19fbGlrZV9hY3RpdmVcIikpIHtcclxuICAgICAgdG9nZ2xlTGlrZShcImRlbFwiLCBjYXJkSWQsIGV2dCwgbnVtTGlrZXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdG9nZ2xlTGlrZShcImFkZFwiLCBjYXJkSWQsIGV2dCwgbnVtTGlrZXMpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBjb250YWluZXJOZXdNZXN0b1xyXG4gICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2RlbGV0ZVwiKVxyXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgIGRlbGV0ZUNhcmQoY2FyZElkKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgICAgZXZ0LnRhcmdldC5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICAgICAgfSBlbHNlIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiV7cmVzLnN0YXR1c31gKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gIGNvbnRhaW5lck5ld01lc3RvXHJcbiAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkc19faW1hZ2VcIilcclxuICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICBwb3B1cEltZy5zcmMgPSBsaW5rTWVzdG87XHJcbiAgICAgIHBvcHVwSW1nLmFsdCA9IG5hbWVNZXN0bztcclxuICAgICAgcG9wdXBOYW1lSW1nLnRleHRDb250ZW50ID0gbmFtZU1lc3RvO1xyXG4gICAgICBvcGVuUG9wdXAocG9wdXBWaWV3SW1nKTtcclxuICAgIH0pO1xyXG4gIHJldHVybiBjb250YWluZXJOZXdNZXN0bzsgLy/QstC+0LfRgNCw0YnQsNC10YIg0LPQvtGC0L7QstGD0Y4g0LrQsNGA0YLQvtGH0LrRgyDQtNC70Y8g0LLRgdGC0LDQstC60Lgg0LIgRE9NXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwYXN0TmV3TWVzdG8oXHJcbiAgbmFtZU1lc3RvLFxyXG4gIGxpbmtNZXN0byxcclxuICBjYXJkc0NvbnRhaW5lcixcclxuICBjYXJkSWQsXHJcbiAgYXJyTGlrZXMsXHJcbiAgaWRVc2VyQ2FyZFxyXG4pIHtcclxuICAvL9Cy0YHRgtCw0LLQu9GP0LXRgiDQt9Cw0LPQvtGC0L7QstC70LXQvdC90YPRjiDQutCw0YDRgtC+0YfQutGDINCyIERPTSDQsiDRgNC+0LTQuNGC0LXQu9GMIC5jYXJkc1xyXG4gIGNhcmRzQ29udGFpbmVyLnByZXBlbmQoXHJcbiAgICBjcmVhdGVDb250YWluZXJOZXdNZXN0byhuYW1lTWVzdG8sIGxpbmtNZXN0bywgY2FyZElkLCBhcnJMaWtlcywgaWRVc2VyQ2FyZClcclxuICApO1xyXG59XHJcbiIsImltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgeyBlbmFibGVWYWxpZGF0aW9uLCB2YWxpZGF0aW9uVmFyLCByZXNldEVycm9yIH0gZnJvbSBcIi4vdmFsaWRhdGUuanNcIjtcclxuaW1wb3J0IHsgb3BlblBvcHVwLCBjbG9zZVBvcHVwLCBhZGRMaXN0ZW5lclBvcHVwIH0gZnJvbSBcIi4vbW9kYWwuanNcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgbmFtZU1lc3RvSW5wdXQsXHJcbiAgbGlua01lc3RvSW5wdXQsXHJcbiAgcG9wdXBBZGRNZXN0byxcclxuICBwYXN0TmV3TWVzdG8sXHJcbiAgY2FyZHNDb250YWluZXIsXHJcbn0gZnJvbSBcIi4vY2FyZC5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGxvYWRBdmF0YXIsXHJcbiAgcmVsb2FkQXZhdGFyLFxyXG4gIGdldFVzZXJJbmZvLFxyXG4gIGdldENhcmRzLFxyXG4gIHBvc3ROZXdDYXJkLFxyXG4gIHBhdGNoUHJvZmlsZSxcclxuICBhZGRMaWtlLFxyXG4gIGRlbGV0ZUxpa2UsXHJcbn0gZnJvbSBcIi4vYXBpXCI7XHJcbmltcG9ydCB7IHJlbmRlckxvYWRpbmcgfSBmcm9tIFwiLi91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZvcm1BZGRNZXN0byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtW25hbWU9YWRkLW5ldy1tZXN0b11cIik7XHJcbmNvbnN0IGJ1dHRvbkFkZE1lc3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5jb25zdCBidXR0b25FZGl0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IGJ1dHRvbnNDbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2ljb24tY2xvc2VcIik7XHJcbmNvbnN0IGZvcm1FZGl0VXNlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm1bbmFtZT1cImVkaXQtdXNlclwiXScpO1xyXG5jb25zdCBidXR0b25TYXZlTWVzdG8gPSBwb3B1cEFkZE1lc3RvLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2J1dHRvbi1zYXZlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZVVzZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX191c2VyLW5hbWVcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlVXNlckFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX191c2VyLWFib3V0XCIpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBFZGl0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZS1wb3B1cFwiKTtcclxuY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImlucHV0W25hbWU9bmFtZS11c2VyXVwiKTtcclxuY29uc3QgYWJvdXRJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFtuYW1lPWFib3V0LXVzZXJdXCIpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBFZGl0QXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hdmF0YXItcG9wdXBcIik7XHJcbmNvbnN0IGZvcm1FZGl0QXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm1bbmFtZT1lZGl0LWF2YXRhcl1cIik7XHJcbmNvbnN0IG5ld0F2YXRhcklucHV0ID0gZm9ybUVkaXRBdmF0YXIucXVlcnlTZWxlY3RvcihcclxuICBcImlucHV0W25hbWU9aW5wdXQtbGluay1hdmF0YXJdXCJcclxuKTtcclxuY29uc3QgYXZhdGFySW1nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XHJcbmNvbnN0IGJ1dHRvbk5ld0F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9uLWF2YXRhci1lZGl0XCIpO1xyXG5leHBvcnQgbGV0IGlkVXNlciA9IFwiXCI7XHJcbmxldCBpbml0aWFsQ2FyZHMgPSB7fTtcclxuY29uc3QgYnV0dG9uU2F2ZVByb2ZpbGUgPSBmb3JtRWRpdFVzZXIucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uLXNhdmVcIik7XHJcbmNvbnN0IGJ1dHRvblNhdmVBdmF0YXIgPSBwb3B1cEVkaXRBdmF0YXIucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uLXNhdmVcIik7XHJcbmVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvblZhcik7XHJcbmFkZExpc3RlbmVyUG9wdXAoKTtcclxuXHJcblByb21pc2UuYWxsKFtnZXRVc2VySW5mbygpLCBsb2FkQXZhdGFyKCksIGdldENhcmRzKCldKVxyXG4gIC50aGVuKChbdXNlckluZm8sIGF2YXRhciwgY2FyZHNdKSA9PiB7XHJcbiAgICBwcm9maWxlVXNlck5hbWUudGV4dENvbnRlbnQgPSB1c2VySW5mby5uYW1lO1xyXG4gICAgcHJvZmlsZVVzZXJBYm91dC50ZXh0Q29udGVudCA9IHVzZXJJbmZvLmFib3V0O1xyXG4gICAgaWRVc2VyID0gdXNlckluZm8uX2lkO1xyXG4gICAgYXZhdGFySW1nLnNyYyA9IGF2YXRhci5hdmF0YXI7XHJcbiAgICBpbml0aWFsQ2FyZHMgPSBjYXJkcztcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5pdGlhbENhcmRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHBhc3ROZXdNZXN0byhcclxuICAgICAgICBpbml0aWFsQ2FyZHNbaW5pdGlhbENhcmRzLmxlbmd0aCAtIGkgLSAxXS5uYW1lLFxyXG4gICAgICAgIGluaXRpYWxDYXJkc1tpbml0aWFsQ2FyZHMubGVuZ3RoIC0gaSAtIDFdLmxpbmssXHJcbiAgICAgICAgY2FyZHNDb250YWluZXIsXHJcbiAgICAgICAgaW5pdGlhbENhcmRzW2luaXRpYWxDYXJkcy5sZW5ndGggLSBpIC0gMV0uX2lkLFxyXG4gICAgICAgIGluaXRpYWxDYXJkc1tpbml0aWFsQ2FyZHMubGVuZ3RoIC0gaSAtIDFdLmxpa2VzLFxyXG4gICAgICAgIGluaXRpYWxDYXJkc1tpbml0aWFsQ2FyZHMubGVuZ3RoIC0gaSAtIDFdLm93bmVyLl9pZFxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG5cclxuZm9ybUVkaXRVc2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIHJlbmRlckxvYWRpbmcoXCLQodC+0YXRgNCw0L3QtdC90LjQtVwiLCBcItCh0L7RhdGA0LDQvdC40YLRjFwiLCB0cnVlLCBidXR0b25TYXZlUHJvZmlsZSk7XHJcbiAgcGF0Y2hQcm9maWxlKG5hbWVJbnB1dCwgYWJvdXRJbnB1dClcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVVc2VyTmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgICAgcHJvZmlsZVVzZXJBYm91dC50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XHJcbiAgICAgIGNsb3NlUG9wdXAocG9wdXBFZGl0UHJvZmlsZSk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PlxyXG4gICAgICByZW5kZXJMb2FkaW5nKFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIiwgXCLQodC+0YXRgNCw0L3QuNGC0YxcIiwgZmFsc2UsIGJ1dHRvblNhdmVQcm9maWxlKVxyXG4gICAgKTtcclxufSk7XHJcblxyXG5idXR0b25zQ2xvc2UuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XHJcbiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZVBvcHVwKTtcclxufSk7XHJcblxyXG5idXR0b25FZGl0UHJvZmlsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVVc2VyTmFtZS50ZXh0Q29udGVudDtcclxuICBhYm91dElucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJBYm91dC50ZXh0Q29udGVudDtcclxuICBvcGVuUG9wdXAocG9wdXBFZGl0UHJvZmlsZSk7XHJcbiAgcmVzZXRFcnJvcihcclxuICAgIHBvcHVwRWRpdFByb2ZpbGUsXHJcbiAgICB2YWxpZGF0aW9uVmFyLmlucHV0U2VsZWN0b3IsXHJcbiAgICB2YWxpZGF0aW9uVmFyLnN1Ym1pdEJ1dHRvblNlbGVjdG9yLFxyXG4gICAgdmFsaWRhdGlvblZhci5pbmFjdGl2ZUJ1dHRvbkNsYXNzXHJcbiAgKTtcclxufSk7XHJcblxyXG5idXR0b25BZGRNZXN0by5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG5hbWVNZXN0b0lucHV0LnZhbHVlID0gXCJcIjtcclxuICBsaW5rTWVzdG9JbnB1dC52YWx1ZSA9IFwiXCI7XHJcbiAgb3BlblBvcHVwKHBvcHVwQWRkTWVzdG8pO1xyXG4gIHJlc2V0RXJyb3IoXHJcbiAgICBwb3B1cEFkZE1lc3RvLFxyXG4gICAgdmFsaWRhdGlvblZhci5pbnB1dFNlbGVjdG9yLFxyXG4gICAgdmFsaWRhdGlvblZhci5zdWJtaXRCdXR0b25TZWxlY3RvcixcclxuICAgIHZhbGlkYXRpb25WYXIuaW5hY3RpdmVCdXR0b25DbGFzc1xyXG4gICk7XHJcbn0pO1xyXG5cclxuZm9ybUFkZE1lc3RvLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIHJlbmRlckxvYWRpbmcoXCLQodC+0YXRgNCw0L3QtdC90LjQtS4uLlwiLCBcItCh0L7Qt9C00LDRgtGMXCIsIHRydWUsIGJ1dHRvblNhdmVNZXN0byk7XHJcbiAgcG9zdE5ld0NhcmQobmFtZU1lc3RvSW5wdXQsIGxpbmtNZXN0b0lucHV0KVxyXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgcGFzdE5ld01lc3RvKFxyXG4gICAgICAgIGRhdGEubmFtZSxcclxuICAgICAgICBkYXRhLmxpbmssXHJcbiAgICAgICAgY2FyZHNDb250YWluZXIsXHJcbiAgICAgICAgZGF0YS5faWQsXHJcbiAgICAgICAgW10sXHJcbiAgICAgICAgZGF0YS5vd25lci5faWRcclxuICAgICAgKTtcclxuICAgICAgY2xvc2VQb3B1cChwb3B1cEFkZE1lc3RvKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+XHJcbiAgICAgIHJlbmRlckxvYWRpbmcoXCLQodC+0YXRgNCw0L3QtdC90LjQtS4uLlwiLCBcItCh0L7Qt9C00LDRgtGMXCIsIGZhbHNlLCBidXR0b25TYXZlTWVzdG8pXHJcbiAgICApO1xyXG59KTtcclxuXHJcbmJ1dHRvbk5ld0F2YXRhci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG5ld0F2YXRhcklucHV0LnZhbHVlID0gXCJcIjtcclxuICBvcGVuUG9wdXAocG9wdXBFZGl0QXZhdGFyKTtcclxuICByZXNldEVycm9yKFxyXG4gICAgcG9wdXBFZGl0QXZhdGFyLFxyXG4gICAgdmFsaWRhdGlvblZhci5pbnB1dFNlbGVjdG9yLFxyXG4gICAgdmFsaWRhdGlvblZhci5zdWJtaXRCdXR0b25TZWxlY3RvcixcclxuICAgIHZhbGlkYXRpb25WYXIuaW5hY3RpdmVCdXR0b25DbGFzc1xyXG4gICk7XHJcbn0pO1xyXG5cclxuZm9ybUVkaXRBdmF0YXIuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgcmVuZGVyTG9hZGluZyhcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCIsIFwi0KHQvtGF0YDQsNC90LjRgtGMXCIsIHRydWUsIGJ1dHRvblNhdmVBdmF0YXIpO1xyXG4gIHJlbG9hZEF2YXRhcihuZXdBdmF0YXJJbnB1dClcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIGF2YXRhckltZy5zcmMgPSBkYXRhLmF2YXRhcjtcclxuICAgICAgY2xvc2VQb3B1cChwb3B1cEVkaXRBdmF0YXIpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgocmVzKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT5cclxuICAgICAgcmVuZGVyTG9hZGluZyhcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCIsIFwi0KHQvtGF0YDQsNC90LjRgtGMXCIsIGZhbHNlLCBidXR0b25TYXZlQXZhdGFyKVxyXG4gICAgKTtcclxufSk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlTGlrZShzdGF0dXMsIGNhcmRJZCwgZXZ0LCBudW1MaWtlcykge1xyXG4gIGlmIChzdGF0dXMgPT0gXCJkZWxcIikge1xyXG4gICAgZGVsZXRlTGlrZShjYXJkSWQpXHJcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgbnVtTGlrZXMudGV4dENvbnRlbnQgPSBkYXRhLmxpa2VzLmxlbmd0aDtcclxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkc19fbGlrZV9hY3RpdmVcIik7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG4gIGlmIChzdGF0dXMgPT0gXCJhZGRcIikge1xyXG4gICAgYWRkTGlrZShjYXJkSWQpXHJcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgbnVtTGlrZXMudGV4dENvbnRlbnQgPSBkYXRhLmxpa2VzLmxlbmd0aDtcclxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJjYXJkc19fbGlrZV9hY3RpdmVcIik7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZXhwb3J0cyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZhbGlkYXRpb25WYXIiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImhpZGVJbnB1dEVyciIsImZvcm1FbCIsImlucHV0RWwiLCJjbGFzc0Vycm9yQWN0aXZlIiwiY2xhc3NJbnB1dEVycm9yIiwiZXJyRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwicmVzZXRFcnJvciIsImlucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJidXR0b25FbCIsImZvckVhY2giLCJkaXNhYmxlU3VibWl0QnV0dG9uIiwiYWRkIiwiYnV0dG9uRWxlbWVudCIsImRpc2FibGVkIiwibGlzdFBvcHVwIiwiZG9jdW1lbnQiLCJvcGVuUG9wdXAiLCJwb3B1cCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjaGVja0tleUVzY2FwZSIsImNsb3NlUG9wdXAiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0IiwiY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJyZW5kZXJMb2FkaW5nIiwidGV4dExvYWRpbmciLCJ0ZXN0U3RhbmRhcnQiLCJidXR0b25TdGF0dXMiLCJidXR0b24iLCJjb25maWciLCJiYXNlVXJsIiwiY2FyZHNVcmwiLCJsaWtlc1VybCIsImF2YXRhclVybCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwidGVtcGxhdGVOZXdNZXN0byIsInBvcHVwQWRkTWVzdG8iLCJuYW1lTWVzdG9JbnB1dCIsImxpbmtNZXN0b0lucHV0IiwiY2FyZHNDb250YWluZXIiLCJwb3B1cFZpZXdJbWciLCJwb3B1cEltZyIsInBvcHVwTmFtZUltZyIsInBhc3ROZXdNZXN0byIsIm5hbWVNZXN0byIsImxpbmtNZXN0byIsImNhcmRJZCIsImFyckxpa2VzIiwiaWRVc2VyQ2FyZCIsInByZXBlbmQiLCJjb250YWluZXJOZXdNZXN0byIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2UiLCJidXR0b25MaWtlIiwibnVtTGlrZXMiLCJidXR0b25EZWxldGUiLCJzcmMiLCJhbHQiLCJsZW5ndGgiLCJpIiwiX2lkIiwiaWRVc2VyIiwibWF0Y2hlcyIsInRvZ2dsZUxpa2UiLCJmZXRjaCIsIm1ldGhvZCIsImRlbGV0ZUNhcmQiLCJ0aGVuIiwidGFyZ2V0IiwicGFyZW50RWxlbWVudCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImNyZWF0ZUNvbnRhaW5lck5ld01lc3RvIiwiZm9ybUFkZE1lc3RvIiwiYnV0dG9uQWRkTWVzdG8iLCJidXR0b25FZGl0UHJvZmlsZSIsImJ1dHRvbnNDbG9zZSIsImZvcm1FZGl0VXNlciIsImJ1dHRvblNhdmVNZXN0byIsInByb2ZpbGVVc2VyTmFtZSIsInByb2ZpbGVVc2VyQWJvdXQiLCJwb3B1cEVkaXRQcm9maWxlIiwibmFtZUlucHV0IiwiYWJvdXRJbnB1dCIsInBvcHVwRWRpdEF2YXRhciIsImZvcm1FZGl0QXZhdGFyIiwibmV3QXZhdGFySW5wdXQiLCJhdmF0YXJJbWciLCJidXR0b25OZXdBdmF0YXIiLCJpbml0aWFsQ2FyZHMiLCJidXR0b25TYXZlUHJvZmlsZSIsImJ1dHRvblNhdmVBdmF0YXIiLCJkZWxldGVMaWtlIiwiZGF0YSIsImxpa2VzIiwiYWRkTGlrZSIsInRvZ2dsZUJ1dHRvbiIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiZmluZEludmFsaWRJbnB1dCIsInBhdHRlcm5NaXNtYXRjaCIsInNldEN1c3RvbVZhbGlkaXR5IiwiZGF0YXNldCIsImVycm9yTWVzc2FnZSIsIkVyck1lc3NhZ2UiLCJzaG93SW5wdXRFcnIiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImNoZWNrVmFsaWQiLCJhZGRGb3JtTGlzdGVuZXIiLCJlbmFibGVWYWxpZGF0aW9uIiwicG9wdXBFbCIsImNvbnRhaW5zIiwiYWxsIiwidXNlckluZm8iLCJhdmF0YXIiLCJjYXJkcyIsIm5hbWUiLCJhYm91dCIsImxpbmsiLCJvd25lciIsInByZXZlbnREZWZhdWx0IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ2YWx1ZSIsInBhdGNoUHJvZmlsZSIsImZpbmFsbHkiLCJwb3N0TmV3Q2FyZCIsInJlbG9hZEF2YXRhciJdLCJzb3VyY2VSb290IjoiIn0=