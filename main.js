(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hO:()=>M});var t={formSelector:".popup__form",inputSelector:".popup__input-field",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_type_disable",inputErrorClass:"input-field_type_error",errorClass:"input-error_active"};function n(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));o.textContent="",o.classList.remove(n),t.classList.remove(r)}function r(e,r,a,c){var u=Array.from(e.querySelectorAll(r)),i=e.querySelector(a);u.forEach((function(r){n(e,r,t.errorClass,t.inputErrorClass)})),o(i),i.classList.add(c)}function o(e){e.disabled=!0}var a=document.querySelectorAll(".popup");function c(e){e.classList.add("popup_opened"),document.addEventListener("keydown",i)}function u(){document.querySelector(".popup_opened").classList.remove("popup_opened"),document.removeEventListener("keydown",i)}function i(e){"Escape"===e.key&&u()}function l(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}function s(e,t,n,r){r.textContent=n?e:t}var d={baseUrl:"https://nomoreparties.co/v1/plus-cohort-19/users/me",cardsUrl:"https://nomoreparties.co/v1/plus-cohort-19/cards",likesUrl:"https://nomoreparties.co/v1/plus-cohort-19/cards/likes",avatarUrl:"https://nomoreparties.co/v1/plus-cohort-19/users/me/avatar",headers:{authorization:"2c7584da-c4c4-46ef-a185-6ffbe2e069d4"}},f=document.querySelector("#newMesto"),p=document.querySelector(".add-mesto-popup"),m=document.querySelector("input[name=name-new-mesto]"),h=document.querySelector("input[name=link-new-mesto]"),v=document.querySelector(".cards"),y=document.querySelector(".popup-views-img"),_=document.querySelector(".popup__img"),S=document.querySelector(".popup__name-img");function b(e,t,n,r,o,a){n.prepend(function(e,t,n,r,o){var a=f.content.cloneNode(!0),u=a.querySelector(".cards__image"),i=a.querySelector(".cards__like"),s=a.querySelector(".cards__num-likes"),p=a.querySelector(".cards__delete");if(u.src=t,u.alt=e,a.querySelector(".cards__title").textContent=e,s.textContent=r.length,r.length>0)for(var m=0;m<r.length;m++)if(r[m]._id==M){i.classList.add("cards__like_active");break}return o==M&&p.classList.add("cards__delete_visible"),i.addEventListener("click",(function(e){i.matches(".cards__like_active")?function(e){return fetch("".concat(d.likesUrl,"/").concat(e),{method:"DELETE",headers:d.headers}).then((function(e){return l(e)}))}(n).then((function(t){s.textContent=t.likes.length,e.target.classList.remove("cards__like_active")})).catch((function(e){console.log(e)})):function(e){return fetch("".concat(d.likesUrl,"/").concat(e),{method:"PUT",headers:d.headers}).then((function(e){return l(e)}))}(n).then((function(t){s.textContent=t.likes.length,e.target.classList.add("cards__like_active")})).catch((function(e){console.log(e)}))})),a.querySelector(".cards__delete").addEventListener("click",(function(e){(function(e){return fetch("".concat(d.cardsUrl,"/").concat(e),{method:"DELETE",headers:d.headers})})(n).then((function(t){if(!t.ok)return Promise.reject("Ошибка:%{res.status}");e.target.parentElement.remove()})).catch((function(e){console.log(e)}))})),a.querySelector(".cards__image").addEventListener("click",(function(n){_.src=t,_.alt=e,S.textContent=e,c(y)})),a}(e,t,r,o,a))}function q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var g=document.querySelector("form[name=add-new-mesto]"),C=document.querySelector(".profile__add-button"),k=document.querySelector(".profile__edit-button"),E=document.querySelectorAll(".popup__icon-close"),L=document.querySelector('form[name="edit-user"]'),A=p.querySelector(".popup__button-save"),x=document.querySelector(".profile__user-name"),U=document.querySelector(".profile__user-about"),w=document.querySelector(".profile-popup"),j=document.querySelector("input[name=name-user]"),O=document.querySelector("input[name=about-user]"),B=document.querySelector(".avatar-popup"),T=document.querySelector("form[name=edit-avatar]"),P=T.querySelector("input[name=input-link-avatar]"),z=document.querySelector(".profile__avatar"),D=document.querySelector(".profile__button-avatar-edit"),M="",N={},I=L.querySelector(".popup__button-save"),J=B.querySelector(".popup__button-save");!function(e){function t(t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(t)?(n.disabled=!1,n.classList.remove(e.inactiveButtonClass)):(o(n),n.classList.add(e.inactiveButtonClass))}Array.from(document.querySelectorAll(e.formSelector)).forEach((function(r){!function(r){var o=Array.from(r.querySelectorAll(e.inputSelector)),a=r.querySelector(e.submitButtonSelector);t(o,a),o.forEach((function(c){c.addEventListener("input",(function(){!function(t,r){r.validity.patternMismatch?r.setCustomValidity(r.dataset.errorMessage):r.setCustomValidity(""),!1===r.validity.valid?function(e,t,n,r,o){var a=e.querySelector(".".concat(t.id,"-error"));a.textContent=n,a.classList.add(r),t.classList.add(o)}(t,r,r.validationMessage,e.errorClass,e.inputErrorClass):n(t,r,e.errorClass,e.inputErrorClass)}(r,c),t(o,a)}))}))}(r)}))}(t),a.forEach((function(e){e.addEventListener("click",(function(e){e.target.classList.contains("popup")&&u()}))})),Promise.all([fetch(d.baseUrl,{headers:d.headers}).then((function(e){return l(e)})),fetch(d.baseUrl,{headers:d.headers}).then((function(e){return l(e)})),fetch(d.cardsUrl,{headers:d.headers}).then((function(e){return l(e)}))]).then((function(e){var t=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,c,u=[],i=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=a.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=n.return&&(c=n.return(),Object(c)!==c))return}finally{if(l)throw o}}return u}}(e,t)||function(e,t){if(e){if("string"==typeof e)return q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,3),n=t[0],r=t[1],o=t[2];x.textContent=n.name,U.textContent=n.about,M=n._id,z.src=r.avatar,N=o;for(var a=0;a<N.length;a++)b(N[N.length-a-1].name,N[N.length-a-1].link,v,N[N.length-a-1]._id,N[N.length-a-1].likes,N[N.length-a-1].owner._id)})).catch((function(e){return console.log(e)})),L.addEventListener("submit",(function(e){e.preventDefault(),s("Сохранение","Сохранить",!0,I),function(e,t){return fetch(d.baseUrl,{method:"PATCH",headers:{authorization:d.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.value,about:t.value})}).then((function(e){return l(e)}))}(j,O).then((function(e){x.textContent=e.name,U.textContent=e.about,u()})).catch((function(e){console.log(e)})).finally((function(){return s("Сохранение...","Сохранить",!1,I)}))})),E.forEach((function(e){e.addEventListener("click",u)})),k.addEventListener("click",(function(){j.value=x.textContent,O.value=U.textContent,c(w),r(w,t.inputSelector,t.submitButtonSelector,t.inactiveButtonClass)})),C.addEventListener("click",(function(){m.value="",h.value="",c(p),r(p,t.inputSelector,t.submitButtonSelector,t.inactiveButtonClass)})),g.addEventListener("submit",(function(e){e.preventDefault(),s("Сохранение...","Создать",!0,A),function(e,t){return fetch(d.cardsUrl,{method:"POST",headers:{authorization:d.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.value,link:t.value})}).then((function(e){return l(e)}))}(m,h).then((function(e){b(e.name,e.link,v,e._id,[],e.owner._id),u()})).catch((function(e){console.log(e)})).finally((function(){return s("Сохранение...","Создать",!1,A)}))})),D.addEventListener("click",(function(){P.value="",c(B),r(B,t.inputSelector,t.submitButtonSelector,t.inactiveButtonClass)})),T.addEventListener("submit",(function(e){e.preventDefault(),s("Сохранение...","Сохранить",!0,J),function(e){return fetch(d.avatarUrl,{method:"PATCH",headers:{authorization:d.headers.authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.value})}).then((function(e){return l(e)}))}(P).then((function(e){z.src=e.avatar,u()})).catch((function(e){console.log(e)})).finally((function(){return s("Сохранение...","Сохранить",!1,J)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,